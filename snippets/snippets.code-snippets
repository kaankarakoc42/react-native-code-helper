{
    "return class component": {
            "prefix": "rcc",
            "body": [
              "import React,{Component} from 'react';",
              "import {Text,View,SafeAreaView} from 'react-native';",
              "",
              "class ${1:App} extends Component {",
              "    constructer(props){",
              "    super(props)",
              "    this.state={}",
              " ",
              "    }",
              "",
              "    render () {",
              "        return (",
              "            <SafeAreaView>",
              "               <Text>Hello World!</Text>",
              "            </SafeAreaView>",
              "        )",
              "    }",
              "}",
              "",
              "export default ${1:App};"
            ],
            "description": "return class component"
    },
    "return function component": {
        "prefix": "rfc",
        "body": [
          "import React from 'react';",
          "import { Text, View } from 'react-native';",
          "",
          "const ${1:YourApp} = () => {",
          "  return (",
          "    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>",
          "      <Text>",
          "        Try editing me! ðŸŽ‰",
          "      </Text>",
          "    </View>",
          "  );",
          "}",
          "",
          "export default ${1:YourApp};"
        ],
        "description": "return function component"
      },
      "create StyleSheet": {
        "prefix": "sheet",
        "body": [
          "import {styleSheet,Dimensions} from 'react-native';",
          "",
          "const styles = StyleSheet.create({",
          "",
          "container:{",
          "justifyContent:'center',",
          "alignContent:'center',",
          "alignItems:'center'",
          "},",
          "",
          "})",
          "",
          "export default styles;"
        ],
        "description": "create StyleSheet"
      },"return function input": {
        "prefix": "rfi",
        "body": [
          "import React, { useState } from 'react';",
          "import { Text, TextInput, View } from 'react-native';",
          "",
          "const {1:Input} = () => {",
          "  const [text, setText] = useState('');",
          "  return (",
          "    <View style={{padding: 10}}>",
          "      <TextInput",
          "        style={{height: 40}}",
          "        placeholder=\"${2:placeholder}\"",
          "        onChangeText={text => setText(text)}",
          "        defaultValue={text}",
          "      />",
          "    </View>",
          "  );",
          "}",
          "",
          "export default ${1:Input}"
        ],
        "description": "return function input"
      },
      "create loginscreen": {
        "prefix": "loginscreen",
        "body": [
          "import React, { Component,useState } from 'react';",
          "import { View, Text, StyleSheet,TextInput,TouchableOpacity, Touchable} from 'react-native';",
          "",
          "",
          "class ${1:LoginScreen} extends Component {",
          "",
          "    constructor(props){",
          "        super(props)",
          "        this.state={",
          "            username:\"\",",
          "            password:\"\"",
          "        }",
          "    }",
          "",
          "    onUsernameChange = text => this.setState({username:text}) ",
          "    onPasswordChange = text => this.setState({password:text}) ",
          "    onButtonClick = ()=>{",
          "        this.setState({username:\"\"})",
          "        this.setState({password:\"\"})",
          "    }",
          "",
          "    render(){",
          "    return (",
          "        <View>",
          "              <TextInput value={this.state.username} onChangeText={this.onUsernameChange.bind(this)}  placeholder=\"username\" placeholderTextColor=\"white\" textAlign=\"center\"/>",
          "              <TextInput value={this.state.password} onChangeText={this.onPasswordChange.bind(this)}  placeholder=\"password\" placeholderTextColor=\"white\" textAlign=\"center\"/>",
          "              <TouchableOpacity onPress={this.onButtonClick}><Text >send</Text></TouchableOpacity>",
          "        </View>",
          "    )",
          "    }",
          "}",
          "",
          "export default ${1:LoginScreen};"
        ],
        "description": "create loginscreen"
      },
      "return Switch function": {
        "prefix": "rfs",
        "body": [
          "const ${1:TestSwitch} = () => {",
          "  const [isEnabled, setIsEnabled] = useState(false);",
          "  const toggleSwitch = () => setIsEnabled(previousState => !previousState);",
          "",
          "  return (",
          "      <Switch",
          "        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}",
          "        thumbColor={isEnabled ? \"cyan\" : \"#f4f3f4\"}",
          "        ios_backgroundColor=\"#3e3e3e\"",
          "        onValueChange={toggleSwitch}",
          "        value={isEnabled}",
          "      />",
          "  );",
          "}",
          "",
          "",
          "",
          ""
        ],
        "description": "return Switch function"
      },
      "return Loading Function": {
        "prefix": "rfl",
        "body": [
          "const ${1:LoadinComponent} = () => (",
          "  <View>",
          "    <ActivityIndicator size=\"small\" color=\"#0000ff\" />",
          "  </View>",
          ");",
          "",
          "",
          "",
          "",
          ""
        ],
        "description": "return Loading Function"
      },

}
